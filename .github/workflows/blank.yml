# BuildWise Pro CI/CD Workflow

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Permissions for the GITHUB_TOKEN
    permissions:
      contents: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run tests (if any are added in the future)
      - name: Run tests
        run: npm test

      # Validate HTML files
      - name: Validate HTML
        run: |
          echo "Checking HTML files..."
          find . -name "*.html" -type f | while read file; do
            echo "Validating $file"
          done

      # Check JavaScript syntax
      - name: Validate JavaScript files
        run: |
          find assets/js -name "*.js" -type f | while read file; do
            echo "Checking $file"
            node -c "$file" || exit 1
          done

      # Set up Git configuration
      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          if ! git ls-remote --exit-code origin gh-pages; then
            git checkout --orphan gh-pages
            git commit --allow-empty -m "Initial commit"
            git push origin gh-pages
          fi
          git fetch origin gh-pages
          git checkout gh-pages
          echo "Deploying to GitHub Pages"
          # Add deployment steps here

